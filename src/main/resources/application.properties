<<<<<<< HEAD

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
spring.profiles.active = dev

# JWT token properties
spring.security.jwt.secret = JWTSecretKey
spring.security.expiration.expirationTime = 3600000

spring.datasource.url = jdbc:postgresql://localhost:5432/RYTPodD2
spring.datasource.username = postgres
spring.datasource.password = 12345

# THE PORT IS CHANGED TO 8080 BECAUSE
# OF GOOGLE OAUTH REDIRECT URL CONSTRAINTS
server.port=8080
#DEFAULT STARTS HERE

#spring.profiles.active=dev
#server.port= ${SERVER_PORT:8080}
#spring.datasource.url=jdbc:postgresql://localhost:${POSTGRES_PORT}/${DATABASE_NAME}
#spring.datasource.username=${DATABASE_USERNAME}
#spring.datasource.password=${DATABASE_PASSWORD}
#DEFAULT END HERE

# Hibernate properties
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=true
# JWT token properties

#DEFAULT STARTS HERE
#spring.security.jwt.secret=JWTSecretKey
#spring.security.expiration.expirationTime=3600000
# Paystack
secret_key=${SECRET_KEY:*******}
paystack_url=${PAYSTACK_URL:*******}
verification_url=${VERIFICATION_URL:*******}
# OAuth
spring.security.oauth2.client.registration.google.client-id= ${GOOGLE_CLIENT_ID:*******}
spring.security.oauth2.client.registration.google.client-secret= ${GOOGLE_CLIENT_SECRET:*****}
spring.security.oauth2.client.registration.google.scope=email,profile
# Logging level
logging.level.root=INFO
logging.level.org.springframework=DEBUG
logging.level.dev.koorius=TRACE
# Logging pattern for the console
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
# .env support
spring.config.import=optional:file:.env[.properties]
#DEFAULT END HERE

# path matching strategy
#spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER